   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"SetRelAlarm.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SetRelAlarm,"ax",%progbits
  19              		.align	1
  20              		.p2align 4,,15
  21              		.global	SetRelAlarm
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	SetRelAlarm:
  27              	.LFB0:
  28              		.file 1 "Modules/OS/OSAL/src/SetRelAlarm.c"
   1:Modules/OS/OSAL/src/SetRelAlarm.c **** /* Copyright 2008, 2009 Mariano Cerdeiro
   2:Modules/OS/OSAL/src/SetRelAlarm.c ****  * Copyright 2014, ACSE & CADIEEL
   3:Modules/OS/OSAL/src/SetRelAlarm.c ****  *      ACSE: http://www.sase.com.ar/asociacion-civil-sistemas-embebidos/ciaa/
   4:Modules/OS/OSAL/src/SetRelAlarm.c ****  *      CADIEEL: http://www.cadieel.org.ar
   5:Modules/OS/OSAL/src/SetRelAlarm.c ****  *
   6:Modules/OS/OSAL/src/SetRelAlarm.c ****  * This file is part of CIAA Firmware.
   7:Modules/OS/OSAL/src/SetRelAlarm.c ****  *
   8:Modules/OS/OSAL/src/SetRelAlarm.c ****  * Redistribution and use in source and binary forms, with or without
   9:Modules/OS/OSAL/src/SetRelAlarm.c ****  * modification, are permitted provided that the following conditions are met:
  10:Modules/OS/OSAL/src/SetRelAlarm.c ****  *
  11:Modules/OS/OSAL/src/SetRelAlarm.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  12:Modules/OS/OSAL/src/SetRelAlarm.c ****  *    this list of conditions and the following disclaimer.
  13:Modules/OS/OSAL/src/SetRelAlarm.c ****  *
  14:Modules/OS/OSAL/src/SetRelAlarm.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  15:Modules/OS/OSAL/src/SetRelAlarm.c ****  *    this list of conditions and the following disclaimer in the documentation
  16:Modules/OS/OSAL/src/SetRelAlarm.c ****  *    and/or other materials provided with the distribution.
  17:Modules/OS/OSAL/src/SetRelAlarm.c ****  *
  18:Modules/OS/OSAL/src/SetRelAlarm.c ****  * 3. Neither the name of the copyright holder nor the names of its
  19:Modules/OS/OSAL/src/SetRelAlarm.c ****  *    contributors may be used to endorse or promote products derived from this
  20:Modules/OS/OSAL/src/SetRelAlarm.c ****  *    software without specific prior written permission.
  21:Modules/OS/OSAL/src/SetRelAlarm.c ****  *
  22:Modules/OS/OSAL/src/SetRelAlarm.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Modules/OS/OSAL/src/SetRelAlarm.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Modules/OS/OSAL/src/SetRelAlarm.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  25:Modules/OS/OSAL/src/SetRelAlarm.c ****  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
  26:Modules/OS/OSAL/src/SetRelAlarm.c ****  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  27:Modules/OS/OSAL/src/SetRelAlarm.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  28:Modules/OS/OSAL/src/SetRelAlarm.c ****  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  29:Modules/OS/OSAL/src/SetRelAlarm.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  30:Modules/OS/OSAL/src/SetRelAlarm.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  31:Modules/OS/OSAL/src/SetRelAlarm.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:Modules/OS/OSAL/src/SetRelAlarm.c ****  * POSSIBILITY OF SUCH DAMAGE.
  33:Modules/OS/OSAL/src/SetRelAlarm.c ****  *
  34:Modules/OS/OSAL/src/SetRelAlarm.c ****  */
  35:Modules/OS/OSAL/src/SetRelAlarm.c **** 
  36:Modules/OS/OSAL/src/SetRelAlarm.c **** /** \brief FreeOSEK Os SetRelAlarm Implementation File
  37:Modules/OS/OSAL/src/SetRelAlarm.c ****  **
  38:Modules/OS/OSAL/src/SetRelAlarm.c ****  ** This file implements the SetRelAlarm API
  39:Modules/OS/OSAL/src/SetRelAlarm.c ****  **
  40:Modules/OS/OSAL/src/SetRelAlarm.c ****  ** \file SetRelAlarm.c
  41:Modules/OS/OSAL/src/SetRelAlarm.c ****  **
  42:Modules/OS/OSAL/src/SetRelAlarm.c ****  **/
  43:Modules/OS/OSAL/src/SetRelAlarm.c **** 
  44:Modules/OS/OSAL/src/SetRelAlarm.c **** /** \addtogroup FreeOSEK
  45:Modules/OS/OSAL/src/SetRelAlarm.c ****  ** @{ */
  46:Modules/OS/OSAL/src/SetRelAlarm.c **** /** \addtogroup FreeOSEK_Os
  47:Modules/OS/OSAL/src/SetRelAlarm.c ****  ** @{ */
  48:Modules/OS/OSAL/src/SetRelAlarm.c **** /** \addtogroup FreeOSEK_Os_Global
  49:Modules/OS/OSAL/src/SetRelAlarm.c ****  ** @{ */
  50:Modules/OS/OSAL/src/SetRelAlarm.c **** 
  51:Modules/OS/OSAL/src/SetRelAlarm.c **** /*
  52:Modules/OS/OSAL/src/SetRelAlarm.c ****  * Initials     Name
  53:Modules/OS/OSAL/src/SetRelAlarm.c ****  * ---------------------------
  54:Modules/OS/OSAL/src/SetRelAlarm.c ****  * MaCe         Mariano Cerdeiro
  55:Modules/OS/OSAL/src/SetRelAlarm.c ****  * KLi          Kang Li
  56:Modules/OS/OSAL/src/SetRelAlarm.c ****  */
  57:Modules/OS/OSAL/src/SetRelAlarm.c **** 
  58:Modules/OS/OSAL/src/SetRelAlarm.c **** /*
  59:Modules/OS/OSAL/src/SetRelAlarm.c ****  * modification history (new versions first)
  60:Modules/OS/OSAL/src/SetRelAlarm.c ****  * -----------------------------------------------------------
  61:Modules/OS/OSAL/src/SetRelAlarm.c ****  * 20090130 v0.1.2 MaCe add OSEK_MEMMAP check
  62:Modules/OS/OSAL/src/SetRelAlarm.c ****  * 20081113 v0.1.1 KLi  Added memory layout attribute macros
  63:Modules/OS/OSAL/src/SetRelAlarm.c ****  * 20080713 v0.1.0 MaCe initial version
  64:Modules/OS/OSAL/src/SetRelAlarm.c ****  */
  65:Modules/OS/OSAL/src/SetRelAlarm.c **** 
  66:Modules/OS/OSAL/src/SetRelAlarm.c **** /*==================[inclusions]=============================================*/
  67:Modules/OS/OSAL/src/SetRelAlarm.c **** #include "Os_Internal.h"
  68:Modules/OS/OSAL/src/SetRelAlarm.c **** 
  69:Modules/OS/OSAL/src/SetRelAlarm.c **** /*==================[macros and definitions]=================================*/
  70:Modules/OS/OSAL/src/SetRelAlarm.c **** 
  71:Modules/OS/OSAL/src/SetRelAlarm.c **** /*==================[internal data declaration]==============================*/
  72:Modules/OS/OSAL/src/SetRelAlarm.c **** 
  73:Modules/OS/OSAL/src/SetRelAlarm.c **** /*==================[internal functions declaration]=========================*/
  74:Modules/OS/OSAL/src/SetRelAlarm.c **** 
  75:Modules/OS/OSAL/src/SetRelAlarm.c **** /*==================[internal data definition]===============================*/
  76:Modules/OS/OSAL/src/SetRelAlarm.c **** 
  77:Modules/OS/OSAL/src/SetRelAlarm.c **** /*==================[external data definition]===============================*/
  78:Modules/OS/OSAL/src/SetRelAlarm.c **** 
  79:Modules/OS/OSAL/src/SetRelAlarm.c **** /*==================[internal functions definition]==========================*/
  80:Modules/OS/OSAL/src/SetRelAlarm.c **** 
  81:Modules/OS/OSAL/src/SetRelAlarm.c **** /*==================[external functions definition]==========================*/
  82:Modules/OS/OSAL/src/SetRelAlarm.c **** StatusType SetRelAlarm
  83:Modules/OS/OSAL/src/SetRelAlarm.c **** (
  84:Modules/OS/OSAL/src/SetRelAlarm.c **** 	AlarmType AlarmID,
  85:Modules/OS/OSAL/src/SetRelAlarm.c **** 	TickType Increment,
  86:Modules/OS/OSAL/src/SetRelAlarm.c **** 	TickType Cycle
  87:Modules/OS/OSAL/src/SetRelAlarm.c **** )
  88:Modules/OS/OSAL/src/SetRelAlarm.c **** {
  29              		.loc 1 88 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              		.cfi_def_cfa_offset 32
  38 0004 0346     		mov	r3, r0
  39 0006 0291     		str	r1, [sp, #8]
  40 0008 0192     		str	r2, [sp, #4]
  41 000a 8DF80F30 		strb	r3, [sp, #15]
  89:Modules/OS/OSAL/src/SetRelAlarm.c **** 	/* \req OSEK_SYS_3.21 The system service StatusType
  90:Modules/OS/OSAL/src/SetRelAlarm.c **** 	 ** SetRelAlarm ( AlarmType AlarmID, TickType Increment, TickType Cycle )
  91:Modules/OS/OSAL/src/SetRelAlarm.c **** 	 ** shall be defined */
  92:Modules/OS/OSAL/src/SetRelAlarm.c **** 
  93:Modules/OS/OSAL/src/SetRelAlarm.c **** 	/* \req OSEK_SYS_3.21.3-1/2 Possible return values in Standard mode are
  94:Modules/OS/OSAL/src/SetRelAlarm.c **** 	 ** E_OK, E_OS_STATE */
  95:Modules/OS/OSAL/src/SetRelAlarm.c **** 	StatusType ret = E_OK;
  42              		.loc 1 95 13
  43 000e 0023     		movs	r3, #0
  44 0010 8DF81730 		strb	r3, [sp, #23]
  96:Modules/OS/OSAL/src/SetRelAlarm.c **** 
  97:Modules/OS/OSAL/src/SetRelAlarm.c **** #if (ERROR_CHECKING_TYPE == ERROR_CHECKING_EXTENDED)
  98:Modules/OS/OSAL/src/SetRelAlarm.c **** 	/* check if the alarm id is in range */
  99:Modules/OS/OSAL/src/SetRelAlarm.c **** 	if(AlarmID >= ALARMS_COUNT)
  45              		.loc 1 99 4
  46 0014 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
  47 0018 012B     		cmp	r3, #1
  48 001a 03D9     		bls	.L2
 100:Modules/OS/OSAL/src/SetRelAlarm.c **** 	{
 101:Modules/OS/OSAL/src/SetRelAlarm.c **** 		/* \req OSEK_SYS_3.21.4-1/2 Extra possible return values in Extended mode are
 102:Modules/OS/OSAL/src/SetRelAlarm.c **** 		 ** E_OS_ID, E_OS_VALUE */
 103:Modules/OS/OSAL/src/SetRelAlarm.c **** 		ret = E_OS_ID;
  49              		.loc 1 103 7
  50 001c 0323     		movs	r3, #3
  51 001e 8DF81730 		strb	r3, [sp, #23]
  52 0022 90E0     		b	.L3
  53              	.L2:
 104:Modules/OS/OSAL/src/SetRelAlarm.c **** 	}
 105:Modules/OS/OSAL/src/SetRelAlarm.c **** 	/* check that increment and cycle are in range */
 106:Modules/OS/OSAL/src/SetRelAlarm.c **** 	else if( (Increment > CountersConst[AlarmsConst[AlarmID].Counter].MaxAllowedValue) ||
  54              		.loc 1 106 58
  55 0024 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
  56 0028 5A49     		ldr	r1, .L9
  57 002a 1346     		mov	r3, r2
  58 002c 9B00     		lsls	r3, r3, #2
  59 002e 1344     		add	r3, r3, r2
  60 0030 9B00     		lsls	r3, r3, #2
  61 0032 0B44     		add	r3, r3, r1
  62 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  63 0036 1946     		mov	r1, r3
  64              		.loc 1 106 67
  65 0038 574A     		ldr	r2, .L9+4
  66 003a 0B46     		mov	r3, r1
  67 003c 9B00     		lsls	r3, r3, #2
  68 003e 0B44     		add	r3, r3, r1
  69 0040 9B00     		lsls	r3, r3, #2
  70 0042 1344     		add	r3, r3, r2
  71 0044 0833     		adds	r3, r3, #8
  72 0046 1B68     		ldr	r3, [r3]
  73              		.loc 1 106 9
  74 0048 029A     		ldr	r2, [sp, #8]
  75 004a 9A42     		cmp	r2, r3
  76 004c 2CD8     		bhi	.L4
  77              		.loc 1 106 85 discriminator 1
  78 004e 019B     		ldr	r3, [sp, #4]
  79 0050 002B     		cmp	r3, #0
  80 0052 2DD0     		beq	.L5
 107:Modules/OS/OSAL/src/SetRelAlarm.c **** 				( ( Cycle != 0 ) &&
 108:Modules/OS/OSAL/src/SetRelAlarm.c **** 				  ( (Cycle > CountersConst[AlarmsConst[AlarmID].Counter].MaxAllowedValue) ||
  81              		.loc 1 108 52
  82 0054 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
  83 0058 4E49     		ldr	r1, .L9
  84 005a 1346     		mov	r3, r2
  85 005c 9B00     		lsls	r3, r3, #2
  86 005e 1344     		add	r3, r3, r2
  87 0060 9B00     		lsls	r3, r3, #2
  88 0062 0B44     		add	r3, r3, r1
  89 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  90 0066 1946     		mov	r1, r3
  91              		.loc 1 108 61
  92 0068 4B4A     		ldr	r2, .L9+4
  93 006a 0B46     		mov	r3, r1
  94 006c 9B00     		lsls	r3, r3, #2
  95 006e 0B44     		add	r3, r3, r1
  96 0070 9B00     		lsls	r3, r3, #2
  97 0072 1344     		add	r3, r3, r2
  98 0074 0833     		adds	r3, r3, #8
  99 0076 1B68     		ldr	r3, [r3]
 107:Modules/OS/OSAL/src/SetRelAlarm.c **** 				( ( Cycle != 0 ) &&
 100              		.loc 1 107 22
 101 0078 019A     		ldr	r2, [sp, #4]
 102 007a 9A42     		cmp	r2, r3
 103 007c 14D8     		bhi	.L4
 109:Modules/OS/OSAL/src/SetRelAlarm.c **** 				    (Cycle < CountersConst[AlarmsConst[AlarmID].Counter].MinCycle) ) ) )
 104              		.loc 1 109 52
 105 007e 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
 106 0082 4449     		ldr	r1, .L9
 107 0084 1346     		mov	r3, r2
 108 0086 9B00     		lsls	r3, r3, #2
 109 0088 1344     		add	r3, r3, r2
 110 008a 9B00     		lsls	r3, r3, #2
 111 008c 0B44     		add	r3, r3, r1
 112 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 113 0090 1946     		mov	r1, r3
 114              		.loc 1 109 61
 115 0092 414A     		ldr	r2, .L9+4
 116 0094 0B46     		mov	r3, r1
 117 0096 9B00     		lsls	r3, r3, #2
 118 0098 0B44     		add	r3, r3, r1
 119 009a 9B00     		lsls	r3, r3, #2
 120 009c 1344     		add	r3, r3, r2
 121 009e 0C33     		adds	r3, r3, #12
 122 00a0 1B68     		ldr	r3, [r3]
 108:Modules/OS/OSAL/src/SetRelAlarm.c **** 				    (Cycle < CountersConst[AlarmsConst[AlarmID].Counter].MinCycle) ) ) )
 123              		.loc 1 108 79
 124 00a2 019A     		ldr	r2, [sp, #4]
 125 00a4 9A42     		cmp	r2, r3
 126 00a6 03D2     		bcs	.L5
 127              	.L4:
 110:Modules/OS/OSAL/src/SetRelAlarm.c **** 	{
 111:Modules/OS/OSAL/src/SetRelAlarm.c **** 		/* \req OSEK_SYS_3.21.4-2/2 Extra possible return values in Extended mode are
 112:Modules/OS/OSAL/src/SetRelAlarm.c **** 		 ** E_OS_ID, E_OS_VALUE */
 113:Modules/OS/OSAL/src/SetRelAlarm.c **** 		ret = E_OS_VALUE;
 128              		.loc 1 113 7
 129 00a8 0823     		movs	r3, #8
 130 00aa 8DF81730 		strb	r3, [sp, #23]
 131 00ae 4AE0     		b	.L3
 132              	.L5:
 114:Modules/OS/OSAL/src/SetRelAlarm.c **** 	}
 115:Modules/OS/OSAL/src/SetRelAlarm.c **** 	else
 116:Modules/OS/OSAL/src/SetRelAlarm.c **** #endif
 117:Modules/OS/OSAL/src/SetRelAlarm.c **** 	/* check if the alarm is disable */
 118:Modules/OS/OSAL/src/SetRelAlarm.c **** 	if(AlarmsVar[AlarmID].AlarmState != 0)
 133              		.loc 1 118 23
 134 00b0 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
 135 00b4 3949     		ldr	r1, .L9+8
 136 00b6 1346     		mov	r3, r2
 137 00b8 5B00     		lsls	r3, r3, #1
 138 00ba 1344     		add	r3, r3, r2
 139 00bc 9B00     		lsls	r3, r3, #2
 140 00be 0B44     		add	r3, r3, r1
 141 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 142              		.loc 1 118 4
 143 00c2 002B     		cmp	r3, #0
 144 00c4 03D0     		beq	.L6
 119:Modules/OS/OSAL/src/SetRelAlarm.c ****    {
 120:Modules/OS/OSAL/src/SetRelAlarm.c **** 		/* \req OSEK_SYS_3.21.3-2/2 Possible return values in Standard mode are
 121:Modules/OS/OSAL/src/SetRelAlarm.c **** 		** E_OK, E_OS_STATE */
 122:Modules/OS/OSAL/src/SetRelAlarm.c **** 		ret = E_OS_STATE;
 145              		.loc 1 122 7
 146 00c6 0723     		movs	r3, #7
 147 00c8 8DF81730 		strb	r3, [sp, #23]
 148 00cc 3BE0     		b	.L3
 149              	.L6:
 123:Modules/OS/OSAL/src/SetRelAlarm.c **** 	}
 124:Modules/OS/OSAL/src/SetRelAlarm.c **** 	else
 125:Modules/OS/OSAL/src/SetRelAlarm.c **** 	{
 126:Modules/OS/OSAL/src/SetRelAlarm.c **** 		IntSecure_Start();
 150              		.loc 1 126 3
 151 00ce 344B     		ldr	r3, .L9+12
 152 00d0 93F90030 		ldrsb	r3, [r3]
 153 00d4 DBB2     		uxtb	r3, r3
 154 00d6 0133     		adds	r3, r3, #1
 155 00d8 DBB2     		uxtb	r3, r3
 156 00da 5AB2     		sxtb	r2, r3
 157 00dc 304B     		ldr	r3, .L9+12
 158 00de 1A70     		strb	r2, [r3]
 159              		.syntax unified
 160              	@ 126 "Modules/OS/OSAL/src/SetRelAlarm.c" 1
 161 00e0 72B6     		cpsid i
 162              	@ 0 "" 2
 127:Modules/OS/OSAL/src/SetRelAlarm.c **** 
 128:Modules/OS/OSAL/src/SetRelAlarm.c **** 		/* enable alarm */
 129:Modules/OS/OSAL/src/SetRelAlarm.c **** 		AlarmsVar[AlarmID].AlarmState = 1;
 163              		.loc 1 129 21
 164              		.thumb
 165              		.syntax unified
 166 00e2 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
 167              		.loc 1 129 33
 168 00e6 2D49     		ldr	r1, .L9+8
 169 00e8 1346     		mov	r3, r2
 170 00ea 5B00     		lsls	r3, r3, #1
 171 00ec 1344     		add	r3, r3, r2
 172 00ee 9B00     		lsls	r3, r3, #2
 173 00f0 0B44     		add	r3, r3, r1
 174 00f2 0122     		movs	r2, #1
 175 00f4 1A70     		strb	r2, [r3]
 130:Modules/OS/OSAL/src/SetRelAlarm.c **** 
 131:Modules/OS/OSAL/src/SetRelAlarm.c **** 		/* set alarm */
 132:Modules/OS/OSAL/src/SetRelAlarm.c **** 		AlarmsVar[AlarmID].AlarmTime = Increment;
 176              		.loc 1 132 21
 177 00f6 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
 178              		.loc 1 132 32
 179 00fa 2849     		ldr	r1, .L9+8
 180 00fc 1346     		mov	r3, r2
 181 00fe 5B00     		lsls	r3, r3, #1
 182 0100 1344     		add	r3, r3, r2
 183 0102 9B00     		lsls	r3, r3, #2
 184 0104 0B44     		add	r3, r3, r1
 185 0106 0433     		adds	r3, r3, #4
 186 0108 029A     		ldr	r2, [sp, #8]
 187 010a 1A60     		str	r2, [r3]
 133:Modules/OS/OSAL/src/SetRelAlarm.c **** 		AlarmsVar[AlarmID].AlarmCycleTime = Cycle;
 188              		.loc 1 133 21
 189 010c 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
 190              		.loc 1 133 37
 191 0110 2249     		ldr	r1, .L9+8
 192 0112 1346     		mov	r3, r2
 193 0114 5B00     		lsls	r3, r3, #1
 194 0116 1344     		add	r3, r3, r2
 195 0118 9B00     		lsls	r3, r3, #2
 196 011a 0B44     		add	r3, r3, r1
 197 011c 0833     		adds	r3, r3, #8
 198 011e 019A     		ldr	r2, [sp, #4]
 199 0120 1A60     		str	r2, [r3]
 134:Modules/OS/OSAL/src/SetRelAlarm.c **** 
 135:Modules/OS/OSAL/src/SetRelAlarm.c **** 		IntSecure_End();
 200              		.loc 1 135 3
 201 0122 1F4B     		ldr	r3, .L9+12
 202 0124 93F90030 		ldrsb	r3, [r3]
 203 0128 DBB2     		uxtb	r3, r3
 204 012a 013B     		subs	r3, r3, #1
 205 012c DBB2     		uxtb	r3, r3
 206 012e 5AB2     		sxtb	r2, r3
 207 0130 1B4B     		ldr	r3, .L9+12
 208 0132 1A70     		strb	r2, [r3]
 209 0134 1A4B     		ldr	r3, .L9+12
 210 0136 93F90030 		ldrsb	r3, [r3]
 211 013a 002B     		cmp	r3, #0
 212 013c 03DC     		bgt	.L3
 213              		.loc 1 135 3 is_stmt 0 discriminator 1
 214 013e 184B     		ldr	r3, .L9+12
 215 0140 0022     		movs	r2, #0
 216 0142 1A70     		strb	r2, [r3]
 217              		.syntax unified
 218              	@ 135 "Modules/OS/OSAL/src/SetRelAlarm.c" 1
 219 0144 62B6     		cpsie i
 220              	@ 0 "" 2
 221              		.thumb
 222              		.syntax unified
 223              	.L3:
 136:Modules/OS/OSAL/src/SetRelAlarm.c **** 	}
 137:Modules/OS/OSAL/src/SetRelAlarm.c **** 
 138:Modules/OS/OSAL/src/SetRelAlarm.c **** #if (HOOK_ERRORHOOK == OSEK_ENABLE)
 139:Modules/OS/OSAL/src/SetRelAlarm.c **** 	/* \req OSEK_ERR_1.3-13/xx The ErrorHook hook routine shall be called if a
 140:Modules/OS/OSAL/src/SetRelAlarm.c **** 	 ** system service returns a StatusType value not equal to E_OK.*/
 141:Modules/OS/OSAL/src/SetRelAlarm.c **** 	/* \req OSEK_ERR_1.3.1-13/xx The hook routine ErrorHook is not called if a
 142:Modules/OS/OSAL/src/SetRelAlarm.c **** 	 ** system service is called from the ErrorHook itself. */
 143:Modules/OS/OSAL/src/SetRelAlarm.c ****    if ( ( ret != E_OK ) && (ErrorHookRunning != 1))
 224              		.loc 1 143 7 is_stmt 1
 225 0146 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 226 014a 002B     		cmp	r3, #0
 227 014c 1CD0     		beq	.L7
 228              		.loc 1 143 46 discriminator 1
 229 014e 154B     		ldr	r3, .L9+16
 230 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 231              		.loc 1 143 25 discriminator 1
 232 0152 012B     		cmp	r3, #1
 233 0154 18D0     		beq	.L7
 144:Modules/OS/OSAL/src/SetRelAlarm.c **** 	{
 145:Modules/OS/OSAL/src/SetRelAlarm.c **** 		SetError_Api(OSServiceId_SetRelAlarm);
 234              		.loc 1 145 3
 235 0156 144B     		ldr	r3, .L9+20
 236 0158 1522     		movs	r2, #21
 237 015a 1A60     		str	r2, [r3]
 146:Modules/OS/OSAL/src/SetRelAlarm.c ****       SetError_Param1(AlarmID);
 238              		.loc 1 146 7
 239 015c 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 240 0160 124A     		ldr	r2, .L9+24
 241 0162 1360     		str	r3, [r2]
 147:Modules/OS/OSAL/src/SetRelAlarm.c **** 		SetError_Param2(Increment);
 242              		.loc 1 147 3
 243 0164 124A     		ldr	r2, .L9+28
 244 0166 029B     		ldr	r3, [sp, #8]
 245 0168 1360     		str	r3, [r2]
 148:Modules/OS/OSAL/src/SetRelAlarm.c **** 		SetError_Param3(Cycle);
 246              		.loc 1 148 3
 247 016a 124A     		ldr	r2, .L9+32
 248 016c 019B     		ldr	r3, [sp, #4]
 249 016e 1360     		str	r3, [r2]
 149:Modules/OS/OSAL/src/SetRelAlarm.c ****       SetError_Ret(ret);
 250              		.loc 1 149 7
 251 0170 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 252 0174 104A     		ldr	r2, .L9+36
 253 0176 1360     		str	r3, [r2]
 150:Modules/OS/OSAL/src/SetRelAlarm.c ****       SetError_Msg("SetRelAlarm returns != than E_OK");
 151:Modules/OS/OSAL/src/SetRelAlarm.c ****       SetError_ErrorHook();
 254              		.loc 1 151 7
 255 0178 0A4B     		ldr	r3, .L9+16
 256 017a 0122     		movs	r2, #1
 257 017c 1A70     		strb	r2, [r3]
 258 017e FFF7FEFF 		bl	ErrorHook
 259 0182 084B     		ldr	r3, .L9+16
 260 0184 0022     		movs	r2, #0
 261 0186 1A70     		strb	r2, [r3]
 262              	.L7:
 152:Modules/OS/OSAL/src/SetRelAlarm.c ****    }
 153:Modules/OS/OSAL/src/SetRelAlarm.c **** #endif
 154:Modules/OS/OSAL/src/SetRelAlarm.c **** 
 155:Modules/OS/OSAL/src/SetRelAlarm.c **** 	return ret;
 263              		.loc 1 155 9
 264 0188 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 156:Modules/OS/OSAL/src/SetRelAlarm.c **** }
 265              		.loc 1 156 1
 266 018c 1846     		mov	r0, r3
 267 018e 07B0     		add	sp, sp, #28
 268              		.cfi_def_cfa_offset 4
 269              		@ sp needed
 270 0190 5DF804FB 		ldr	pc, [sp], #4
 271              	.L10:
 272              		.align	2
 273              	.L9:
 274 0194 00000000 		.word	AlarmsConst
 275 0198 00000000 		.word	CountersConst
 276 019c 00000000 		.word	AlarmsVar
 277 01a0 00000000 		.word	SuspendAllInterrupts_Counter
 278 01a4 00000000 		.word	ErrorHookRunning
 279 01a8 00000000 		.word	Osek_ErrorApi
 280 01ac 00000000 		.word	Osek_ErrorParam1
 281 01b0 00000000 		.word	Osek_ErrorParam2
 282 01b4 00000000 		.word	Osek_ErrorParam3
 283 01b8 00000000 		.word	Osek_ErrorRet
 284              		.cfi_endproc
 285              	.LFE0:
 287              		.text
 288              	.Letext0:
 289              		.file 2 "d:\\project\\9388\\e1\\2023_7_27\\sr5e1_l9388_freeosek\\tools\\toolchain\\arm\\mingw64_nt
 290              		.file 3 "d:\\project\\9388\\e1\\2023_7_27\\sr5e1_l9388_freeosek\\tools\\toolchain\\arm\\mingw64_nt
 291              		.file 4 "d:\\project\\9388\\e1\\2023_7_27\\sr5e1_l9388_freeosek\\modules\\os\\osal\\include\\Types
 292              		.file 5 "d:\\project\\9388\\e1\\2023_7_27\\sr5e1_l9388_freeosek\\modules\\os\\osal\\include\\Os_Cf
 293              		.file 6 "d:\\project\\9388\\e1\\2023_7_27\\sr5e1_l9388_freeosek\\modules\\os\\osal\\include\\os.h"
 294              		.file 7 "d:\\project\\9388\\e1\\2023_7_27\\sr5e1_l9388_freeosek\\modules\\os\\osal\\include\\Os_In
DEFINED SYMBOLS
                            *ABS*:00000000 SetRelAlarm.c
C:\Users\AAA\AppData\Local\Temp\ccGPGuQ2.s:19     .text.SetRelAlarm:00000000 $t
C:\Users\AAA\AppData\Local\Temp\ccGPGuQ2.s:26     .text.SetRelAlarm:00000000 SetRelAlarm
C:\Users\AAA\AppData\Local\Temp\ccGPGuQ2.s:274    .text.SetRelAlarm:00000194 $d
                           .group:00000000 wm4.0.a614e68b47a8f647caa7e8088949ad9c
                           .group:00000000 wm4.Compiler.h.37.21976e385218db9c908e92701adcc031
                           .group:00000000 wm4.Types.h.71.4412dfbb75820d0512c0e074dd5535a3
                           .group:00000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:00000000 wm4.features.h.33.5bd1eea2d80518b50f7af0b5ce6750e0
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:00000000 wm4.Types.h.138.ef43a0c9706bafb70401eec7b92ddf85
                           .group:00000000 wm4.Os_Cfg.h.42.b70a4e53fdd4e3c8f378c7331fd65a35
                           .group:00000000 wm4.Os_Arch.h.93.0863f8c3f86c55fe1f037e41544a1c6f
                           .group:00000000 wm4.os.h.87.e22781870e0c5fc4344bfdd6275b723d
                           .group:00000000 wm4.Os_Internal_Arch.h.35.2a7cc3164dd52be0f47ede63cd82ab03
                           .group:00000000 wm4.stddef.h.39.27677723d43e5b5a7afdf8d798429f1d
                           .group:00000000 wm4.Os_Internal_Cfg.h.41.153a419c81b225b8f854c568ce44c0a2
                           .group:00000000 wm4.os_internal.h.84.e9d92fe93bbc56f6b3dec8f49cbfd369

UNDEFINED SYMBOLS
ErrorHook
AlarmsConst
CountersConst
AlarmsVar
SuspendAllInterrupts_Counter
ErrorHookRunning
Osek_ErrorApi
Osek_ErrorParam1
Osek_ErrorParam2
Osek_ErrorParam3
Osek_ErrorRet
